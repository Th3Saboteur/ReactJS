{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\The Saboteur\\\\Documents\\\\VSCode\\\\ReactJs\\\\frontend\\\\src\\\\pages\\\\Profile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom'; //Em substituição o link do html\n\nimport './style.css';\nimport api from '../../services/api'; //Imorta api de conexão com backend\n\nexport default function Profile() {\n  _s();\n\n  const history = useHistory(); //Em substituição ao 'to=\"\"'\n\n  const initUser = {\n    //Usuário default para ser salvo\n    name: '',\n    email: '',\n    idade: 0,\n    empresa: ''\n  };\n  const [user, setUser] = useState(initUser); //Usa função setUser para atualizar o iniUser\n\n  function onSubmit(ev) {\n    //Recebe um evento (submissão)\n    ev.preventDefault(); //Retira recarregamento da submissão\n\n    api.post('/users', user).then(response => {\n      history.push('/');\n    }); //Salva o usuário via api e, caso dê certo, retorna a página padrão\n  }\n\n  function onChange(ev) {\n    //Função para ação de mudança de campos\n    const {\n      name,\n      value\n    } = ev.target; //Captura o campo e seu respectivo valor\n\n    setUser({ ...user,\n      [name]: value\n    }); //Desestrutura o usuário, pegando o campo capturado e o atualizando\n    //console.log(user);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Nome:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        onChange: onChange,\n        value: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: onChange,\n        value: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Idade:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"idade\",\n        onChange: onChange,\n        value: user.idade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Empresa:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"empresa\",\n        onChange: onChange,\n        value: user.empresa\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"button\",\n          onClick: () => history.push('/'),\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"ej2Mb3EjxfiM7d2xSoIKtE0Iuq0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/The Saboteur/Documents/VSCode/ReactJs/frontend/src/pages/Profile/index.js"],"names":["React","useState","Link","useHistory","api","Profile","history","initUser","name","email","idade","empresa","user","setUser","onSubmit","ev","preventDefault","post","then","response","push","onChange","value","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom'; //Em substituição o link do html\r\nimport './style.css';\r\nimport api from '../../services/api'; //Imorta api de conexão com backend\r\n\r\nexport default function Profile(){\r\n    const history = useHistory(); //Em substituição ao 'to=\"\"'\r\n    const initUser = { //Usuário default para ser salvo\r\n        name: '',\r\n        email: '',\r\n        idade: 0,\r\n        empresa: ''\r\n    }\r\n    const [user, setUser] = useState(initUser); //Usa função setUser para atualizar o iniUser\r\n\r\n    function onSubmit(ev){ //Recebe um evento (submissão)\r\n        ev.preventDefault(); //Retira recarregamento da submissão\r\n        api.post('/users', user).then((response)=>{\r\n            history.push('/');\r\n        }); //Salva o usuário via api e, caso dê certo, retorna a página padrão\r\n    }\r\n\r\n    function onChange(ev){ //Função para ação de mudança de campos\r\n        const {name, value} = ev.target; //Captura o campo e seu respectivo valor\r\n        setUser({...user, [name]:value}) //Desestrutura o usuário, pegando o campo capturado e o atualizando\r\n        //console.log(user);\r\n    }\r\n\r\n    return (\r\n        <div id=\"profile-container\">\r\n            <h1>Cadastro</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <strong>Nome:</strong>\r\n                <input name=\"name\" onChange={onChange} value={user.name}/>\r\n                <strong>Email:</strong>\r\n                <input  type=\"email\" name=\"email\" onChange={onChange} value={user.email}/>\r\n                <strong>Idade:</strong>\r\n                <input name=\"idade\" onChange={onChange} value={user.idade}/>\r\n                <strong>Empresa:</strong>\r\n                <input name=\"empresa\" onChange={onChange} value={user.empresa}/>\r\n                <div className=\"actions\">\r\n                    <Link className=\"button\" onClick={()=>history.push('/')}>Voltar</Link>\r\n                    <button className=\"button\" type=\"submit\">Salvar</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}